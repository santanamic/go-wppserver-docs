{
  "info": {
    "title": "go-wppserver",
    "version": "1.0.0"
  },
  "security": [
    {
      "oauth2": []
    }
  ],
  "paths": {
    "/auth": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description" : "A auth request is used to exchange authorization credentials for an access token.
Requests to the auth endpoint are authenticated using client credentials (API Keys)  or through username and password authentication.",
        "summary": "Get Token",
        "parameters": [
          {
            "name": "grant_type",
            "description": "The grant_type is a way to specify which authorization flow the client wants to use to obtain an access token. The two supported types are: password and client_credentials.",
            "in": "query",
            "type": "string",
            "x-example": "password"
          },
          {
            "name": "username",
            "description": "Used when the client wants to obtain an access token using the user's credentials (grant_type is password).",
            "in": "query",
            "type": "string",
            "x-example": "admin"
          },
          {
            "name": "password",
            "description": "Used when the client wants to obtain an access token using the user's credentials (grant_type is password),",
            "in": "query",
            "type": "string",
            "x-example": "root"
          },
          {
            "name": "client_id",
            "description": "Used when the client wants to obtain an access token using API keys (grant_type is client_credentials).",
            "in": "query",
            "type": "string",
            "x-example": "cd_ce952554bf5a11edafa10242ac120002"
          },
          {
            "name": "client_secret",
            "description": "Used when the client wants to obtain an access token using API keys (grant_type is client_credentials).",
            "in": "query",
            "type": "string",
            "x-example": "cs_2242ec18a6c94f02bb90b4abbb6a3df5"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "example": {
                "access_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMCIsImFwaWtleWlkIjoiMDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAwIiwidXNlcmlkIjoiOGI1M2QwZDctYTM4Yy0xMWVkLWI5ZWUtNTBiN2MzMDA4NDMzIiwiU2NvcGUiOiJhZG1pbjoqIiwiZXhwIjoxNjc4Mzg1NjAwfQ.-k7Pm8E9R2hMPjFfjeun_7ZdKsLaT7RcCvzXlMDWR28"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "produces": [
          "application/json"
        ]
      }
    },
    "/user": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Register User",
        "description": "The endpoint allows users to register. This endpoint typically receives user registration information such as name, email address, and password.",
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "400": {
            "description": "Bad request"
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "example": {
                "name": "Raúl Méndez",
                "email": "rmendez1985@gmail.com",
                "password": "05081985"
              }
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get User",
        "description": "The endpoint allows users to obtain information about their accounts. This endpoint normally does not receive parameters.",
        "security": [
          {
            "oauth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "example": {
                "id": "58fd4474-8bb0-41a0-ad5f-5b492fbdfa2c",
                "name": "Raúl Méndez",
                "email": "rmendez1985@gmail.com",
                "status": "enabled",
                "type": "user"
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad request"
          }
        },
        "parameters": [],
        "produces": [
          "application/json"
        ]
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update User",
        "description": "The endpoint allows users to update information in their accounts based on the information provided in the request. This endpoint usually receives Name and Email parameters for updating. If the request is made by an administrator, the Type and Status parameters can also be received in the request, and in these case, the user ID parameter must be sent in the body of the request.",
        "security": [
          {
            "oauth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "type": "object",
              "example": {
                "id": "58fd4474-8bb0-41a0-ad5f-5b492fbdfa2c",
                "name": "Raúl Méndez",
                "email": "rmendez1985@gmail.com",
                "type": "admin"
              }
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad request"
          },
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "example": {
                "id": "58fd4474-8bb0-41a0-ad5f-5b492fbdfa2c",
                "name": "Raúl Méndez",
                "email": "rmendez1985@gmail.com",
                "type": "admin"
              }
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "Delete User",
        "description":"The endpoint is responsible for deleting a specific user from the system. When a DELETE request is sent to this endpoint with the user ID to be deleted, the system verifies that the user exists and then removes all information associated with the user.",
        "security": [
          {
            "oauth2": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response. No content"
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad request"
          },
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "example": {
                "id": "58fd4474-8bb0-41a0-ad5f-5b492fbdfa2c"
              }
            }
          }
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/user/password": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update Password User",
        "description":"The endpoint allows users to update their access passwords. By making a request to that endpoint with the correct credentials, the user can submit a new password that will replace the old password.",
        "security": [
          {
            "oauth2": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response. No content"
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad request"
          },
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "example": {
                "id": "58fd4474-8bb0-41a0-ad5f-5b492fbdfa2c",
                "oldpassword": "05081985",
                "newpassword": "rmendez1985"
              }
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/user/status": {
      "put": {
        "tags": [
          "User"
        ],
        "summary": "Update Status User",
        "description":"The endpoint allows admin-type user to update the status of other users. By making a request to that endpoint with the correct credentials, the admin user can update the target user status to enabled or disabled.",
        "security": [
          {
            "oauth2": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successful response. No content"
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          },
          "400": {
            "description": "Bad request"
          },
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "example": {
                "id": "58fd4474-8bb0-41a0-ad5f-5b492fbdfa2c",
                "status": "disabled"
              }
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get All Users",
        "description":"The endpoint allows administrators to obtain a complete list of all registered users in the system. When making a request to this endpoint, the application will receive a response containing the details of all users, including information such as name, email address, encrypted password and other relevant information.",
        "security": [
          {
            "oauth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
              "schema": {
              "type": "object",
              "example": [
                    {
                    "id": "58fd4474-8bb0-41a0-ad5f-5b492fbdfa2c",
                    "name": "Raúl Méndez",
                    "email": "rmendez1985@gmail.com",
                    "status": "disabled",
                    "type": "admin"
                  }
                ]
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "parameters": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/users/findusers": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Find Users",
        "description":"The endpoint allows administrators to perform searches for specific users based on a keyword. Upon making a request to that endpoint with the correct search parameters the app will receive a response containing a list of users.",
        "security": [
          {
            "oauth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
              "schema": {
              "type": "object",
              "example": [
                    {
                    "id": "58fd4474-8bb0-41a0-ad5f-5b492fbdfa2c",
                    "name": "Raúl Méndez",
                    "email": "rmendez1985@gmail.com",
                    "status": "disabled",
                    "type": "admin"
                  }
                ]
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "401": {
            "description": "Unauthorized"
          }
        },
        "parameters": [
          {
            "name": "keyword",
            "description": "The field allows you to enter a relevant keyword that will be used to filter users.",
            "in": "query",
            "type": "string",
            "x-example": "Méndez"
          }
          ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/device/login": {
      "get": {
        "tags": [
          "Device"
        ],
        "summary": "Login Device",
        "security": [
          {
            "oauth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "parameters": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/device/logout": {
      "get": {
        "tags": [
          "Device"
        ],
        "summary": "Logout Device",
        "security": [
          {
            "oauth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "parameters": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/session/status": {
      "get": {
        "tags": [
          "Session"
        ],
        "summary": "Status Session",
        "security": [
          {
            "oauth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "parameters": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/session/connect": {
      "post": {
        "tags": [
          "Session"
        ],
        "summary": "Connect Session",
        "security": [
          {
            "oauth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "parameters": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/session/disconnect": {
      "post": {
        "tags": [
          "Session"
        ],
        "summary": "Disconnect Session",
        "security": [
          {
            "oauth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "parameters": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/chat/send/text": {
      "post": {
        "tags": [
          "Send"
        ],
        "summary": "Send Image",
        "security": [
          {
            "oauth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "example": {
                "Phone": "+5511932486442",
                "Body": "{{$randomLoremText}}"
              }
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/chat/send/document": {
      "post": {
        "tags": [
          "Send"
        ],
        "summary": "Send Document",
        "security": [
          {
            "oauth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "example": {
                "Phone": "+5511932486442",
                "FileName": "My file.zip",
                "Document": "data:application/zip;base64,UEsDBBQAAAAIAEcLMladeZbNGgAAABgAAAAIAAAAZG93bmxvYWTLyM9JVCgsTeUqSczhSs7PzedKLS5JLOYCAFBLAQIfABQAAAAIAEcLMladeZbNGgAAABgAAAAIACQAAAAAAAAAIAAAAAAAAABkb3dubG9hZAoAIAAAAAAAAQAYAOkgZwD1KtkB6SBnAPUq2QGL/Iv/9CrZAVBLBQYAAAAAAQABAFoAAABAAAAAAAA="
              }
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    },
    "/phone/contacts": {
      "get": {
        "tags": [
          "Phone"
        ],
        "summary": "Get Contacts",
        "security": [
          {
            "oauth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "parameters": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/phone/scraping": {
      "post": {
        "tags": [
          "Phone"
        ],
        "summary": "Scraping Phones",
        "security": [
          {
            "oauth2": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "example": {
                "Phone": [
                  "5491155553934",
                  "5491155553935"
                ]
              }
            }
          }
        ],
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ]
      }
    }
  },
  "swagger": "2.0",
  "host": "localhost:3000",
  "schemes": [
    "http"
  ],
  "basePath": "/v1",
  "securityDefinitions": {
    "oauth2": {
      "type": "oauth2",
      "flow": "password",
      "tokenUrl": "http://localhost:3000/v1/auth",
      "scopes": {}
    }
  },
  "x-components": {}
}
